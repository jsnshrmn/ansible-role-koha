---
- name: Make Install Koha
  make:
    chdir: "/usr/share/koha-{{ koha_version }}"
    target: install
- name: Set default SELinux context
  command: semanage fcontext -a -t httpd_sys_content_t  "/usr/share/koha/intranet/htdocs(/.*)?"
- name: Set default SELinux context
  command: semanage fcontext -a -t httpd_sys_script_exec_t  "/usr/share/koha/intranet/cgi-bin(/.*)?"
- name: Set default SELinux context
  command: semanage fcontext -a -t httpd_sys_content_t  "/usr/share/koha/opac/htdocs(/.*)?"
- name: Set default SELinux context
  command: semanage fcontext -a -t httpd_sys_script_exec_t  "/usr/share/koha/opac/cgi-bin(/.*)?"
- name: Restore SELinux context
  command: sudo restorecon -R "/usr/share/koha"
- name: Apply Apache2 config for Koha
  copy:
    src: "{{ item }}"
    dest: /etc/httpd/conf.d/
    mode: 0644
    owner: root
    group: root
  with_items:
    - srv_api.conf
    - srv_intranet.conf
    - srv_opac.conf
- name: Symlink zebraidx for RHEL
  file:
    src: /usr/bin/zebraidx-2.0
    dest: /usr/bin/zebraidx
    state: link
- name: Adjust paths in Koha Zebra config for RHEL
  replace:
    dest: "{{ item }}"
    regexp: >
      ^modulePath: /usr/lib/idzebra-2\.0/modules$
    replace: >
      modulePath: /usr/lib64/idzebra-2.0/modules
  with_items:
    - /etc/koha/zebradb/zebra-authorities.cfg
    - /etc/koha/zebradb/zebra-authorities-dom.cfg
    - /etc/koha/zebradb/zebra-biblios.cfg
    - /etc/koha/zebradb/zebra-biblios-dom.cfg
- name: Link Koha index control script to init.d
  file:
    src: /usr/share/koha/bin/koha-index-daemon-ctl.sh
    dest: /etc/init.d/koha-index-daemon
    state: link
- name: Run Zebra Server at startup via rc.local
  replace:
    dest: /etc/rc.d/rc.local
    regexp: >
      ^touch /var/lock/subsys/local$
    replace: |
      touch /var/lock/subsys/local # modified by ansible
      export KOHA_CONF=/etc/koha/koha-conf.xml
      export PERL5LIB=/usr/share/koha/lib
      /usr/bin/zebrasrv-2.0 -D -T -p /var/run/zebrasrv.pid -f /etc/koha/koha-conf.xml -l /var/log/koha/zebrasrv.log
- name: /etc/rc.d/rc.local is executable
  file:
    path: /etc/rc.d/rc.local
    mode: 0755
    state: file
- name: Adjust background index control script for RHEL
  replace:
    dest: /usr/share/koha/bin/koha-index-daemon-ctl.sh
    regexp: >
      ^\. /lib/lsb/init-functions$
    replace: |
      . /lib/lsb/init-functions
      . /etc/rc.d/init.d/functions
      log_daemon_msg() { logger "$@"; }
      log_end_msg() { [ $1 -eq 0 ] && RES=OK; logger ${RES:=FAIL}; }
- name: stunnel chroot dir
  file:
    path: /var/lib/stunnel
    state: directory
    mode: 0755
    owner: root
    group: root
    recurse: yes
- name: Add stunnel to systemd
  copy:
    src: "{{ item }}"
    dest: /usr/lib/systemd/system/
    mode: 0644
    owner: root
    group: root
  with_items:
    - stunnel.service
- name: Apply templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - src: main.cf.j2
      dest: /etc/postfix/main.cf
    - src: sasl_passwd.j2
      dest: /etc/postfix/sasl_passwd
    - src: SIPconfig.xml.j2
      dest: /etc/koha/SIPconfig.xml
    - src: stunnel.conf.j2
      dest: /etc/stunnel/stunnel.conf
- name: Generate SASL postmap
  command: postmap /etc/postfix/sasl_passwd
  args:
    chdir: /etc/postfix
- name: Add anacron jobs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - src: koha-daily.cron
      dest: /etc/cron.daily/
    - src: koha-hourly.cron
      dest: /etc/cron.hourly/
- name: Add cron jobs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - src: koha.cron
      dest: /etc/cron.d/
- name: Set SELinux exceptions for apache
  command: "setsebool -P {{ item }} on"
  with_items:
  - httpd_can_network_connect
  - httpd_can_sendmail
# Credits: http://jensd.be/587/linux/tips-tricks-for-ansible
- name: SELinux, check loaded modules
  shell: semodule -l
  register: selinuxmodules
  always_run: yes
  changed_when: False
- name: Copy SELinux Type Enforcement for Zebra
  copy:
    src: zebra_local.te
    dest: /tmp/zebra_local.te
    mode: 0644
    owner: root
    group: root
  when: "selinuxmodules.stdout.find('zebra_local') == -1"
- name: Create SELinux module for Zebra from type enforcement
  command: checkmodule -M -m -o zebra_local.mod zebra_local.te
  args:
    chdir: /tmp
  when: "selinuxmodules.stdout.find('zebra_local') == -1"
- name: Compile SELinux module for Zebra
  command: semodule_package -m zebra_local.mod -o zebra_local.pp
  args:
    chdir: /tmp
  when: "selinuxmodules.stdout.find('zebra_local') == -1"
- name: Install SELinux module for Zebra
  command: semodule -i zebra_local.pp
  args:
    chdir: /tmp
  when: "selinuxmodules.stdout.find('zebra_local') == -1"
